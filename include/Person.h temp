class Person {
public: 
	std::string name;
	std::string surname;

	Person(std::string aName, std::string aSurname)
	{
        name = aName;
        surname = aSurname;
    }

	virtual auto to_string() const->std::string;

};

class Mr : Person {
public:
	std::string title;


	Mr(std::string aNamee, std::string aSurnamee, std::string aTitle = "Mr")
		: Person(aNamee, aSurnamee)
	{
		title = aTitle;
	}

    auto who_is_it(Mr const& person) const -> std::string;

	virtual auto to_string() const ->std::string;
};

class Ms : Person {
public:
	std::string title;

	Ms(std::string aNamee, std::string aSurnamee, std::string aTitle = "Ms")
		: Person(aNamee, aSurnamee)
	{
		title = aTitle;
	}

    auto who_is_it(Ms const& person) const -> std::string;

	virtual auto to_string()const ->std::string;
};

class King : Person {
public:
	std::string title;

	King(std::string aNamee, std::string aSurnamee, std::string aTitle = "King")
		: Person(aNamee, aSurnamee)
	{
		title = aTitle;
	}

    auto who_is_it(King const& person) const -> std::string;

	virtual auto to_string() const ->std::string;
};

class Queen : Person {
public:
	std::string title;

	Queen(std::string aNamee, std::string aSurnamee, std::string aTitle = "Queen")
		: Person(aNamee, aSurnamee)
	{
		title = aTitle;
	}

    auto who_is_it(Queen const& person) const -> std::string;

	virtual auto to_string() const ->std::string;
};

class GreetingMr : public Mr {
public:

std::string greeting;

GreetingMr(std::string name, std::string surname, std::string title = "Mr", std::string greeting = "Hi") 
: Mr(name, surname, title)
{
this->greeting = greeting;
}

auto getGreeting() const -> std::string;

auto greet(Mr const& person) const -> std::string;

};

class GreetingMs : public Ms {
public:

std::string greeting;

GreetingMs(std::string name, std::string surname, std::string title = "Ms", std::string greeting = "Hi") 
: Ms(name, surname, title)
{
this->greeting = greeting;
}

auto getGreeting() const -> std::string;
auto greet(Ms const& person) const -> std::string;

};

class GreetingKing : public King {
public:

std::string greeting;

GreetingKing(std::string name, std::string surname, std::string title = "King", std::string greeting = "Hi") 
: King(name, surname, title)
{
this->greeting = greeting;
}

auto getGreeting() const -> std::string;
auto greet(King const& person) const -> std::string;

};

class GreetingQueen : public Queen {
public:

std::string greeting;

GreetingQueen(std::string name, std::string surname, std::string title = "Queen", std::string greeting = "Hi") 
: Queen(name, surname, title)
{
this->greeting = greeting;
}

auto getGreeting() const -> std::string;
auto greet(Queen const& person) const -> std::string;

};

class HelloMr : public GreetingMr {
public:
std::string greeting;

HelloMr(std::string name, std::string surname, std::string title = "Mr", std::string greeting = "Hello")
:  GreetingMr(name, surname, title, greeting) {
this-> greeting = greeting;
}

auto getGreeting() const -> std::string;

auto greet(Mr const& person) const -> std::string;

};

class HelloMs : public GreetingMs {
public:
std::string greeting;

HelloMs(std::string name, std::string surname, std::string title = "Ms", std::string greeting = "Hello")
:  GreetingMs(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Ms const& person) const -> std::string;

};

class HelloKing : public GreetingKing {
public:
std::string greeting;

HelloKing(std::string name, std::string surname, std::string title = "King", std::string greeting = "Hello")
:  GreetingKing(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(King const& person) const -> std::string;

};

class HelloQueen : public GreetingQueen {
public:
std::string greeting;

HelloQueen(std::string name, std::string surname, std::string title = "Queen", std::string greeting = "Hello")
:  GreetingQueen(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Queen const& person) const -> std::string;

};

class Good_eveningMr : public GreetingMr {
public:
std::string greeting;

Good_eveningMr(std::string name, std::string surname, std::string title = "Mr", std::string greeting = "Good evening")
:  GreetingMr(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Mr const& person) const -> std::string;

};

class Good_eveningMs : public GreetingMs {
public:
std::string greeting;

Good_eveningMs(std::string name, std::string surname, std::string title = "Ms", std::string greeting = "Good evening")
:  GreetingMs(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Ms const& person) const -> std::string;

};

class Good_eveningKing : public GreetingKing {
public:
std::string greeting;

Good_eveningKing(std::string name, std::string surname, std::string title = "King", std::string greeting = "Good evening")
:  GreetingKing(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(King const& person) const -> std::string;

};

class Good_eveningQueen : public GreetingQueen {
public:
std::string greeting;

Good_eveningQueen(std::string name, std::string surname, std::string title = "Queen", std::string greeting = "Good evening")
:  GreetingQueen(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Queen const& person) const -> std::string;

};

class FarewellMr : public GreetingMr {
public:
std::string greeting;

FarewellMr(std::string name, std::string surname, std::string title = "Mr", std::string greeting = "Farewell")
:  GreetingMr(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Mr const& person) const -> std::string;

};

class FarewellMs : public GreetingMs {
public:
std::string greeting;

FarewellMs(std::string name, std::string surname, std::string title = "Ms", std::string greeting = "Farewell")
:  GreetingMs(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Ms const& person) const -> std::string;

};

class FarewellKing : public GreetingKing {
public:
std::string greeting;

FarewellKing(std::string name, std::string surname, std::string title = "King", std::string greeting = "Farewell")
:  GreetingKing(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(King const& person) const -> std::string;

};

class FarewellQueen : public GreetingQueen {
public:
std::string greeting;

FarewellQueen(std::string name, std::string surname, std::string title = "Queen", std::string greeting = "Farewell")
:  GreetingQueen(name, surname, title) {
this-> greeting = greeting;
}
auto getGreeting() const -> std::string;
auto greet(Queen const& person) const -> std::string;

};
